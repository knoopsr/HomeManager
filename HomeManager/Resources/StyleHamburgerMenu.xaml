<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">



    <Brush x:Key="MenuColorText">White</Brush>


    <Storyboard x:Key="ShowMenu">
        <DoubleAnimation
            Storyboard.TargetProperty="Width"
            From="50"
            To="180"
            Duration="0:0:0.3" />
    </Storyboard>

    <Storyboard x:Key="HideMenu">
        <DoubleAnimation
            Storyboard.TargetProperty="Width"
            From="180"
            To="50"
            Duration="0:0:0.3" />
    </Storyboard>



    <Storyboard x:Key="AnimateMarginHide">
        <ThicknessAnimation
            Storyboard.TargetProperty="Margin"
            From="0,0,0,0"
            To="-15,0,0,0"
            Duration="0:0:0.3" />
    </Storyboard>

    <Storyboard x:Key="AnimateMarginShow">
        <ThicknessAnimation
            Storyboard.TargetProperty="Margin"
            From="-15,0,0,0"
            To="0,0,0,0"
            Duration="0:0:0.3" />
    </Storyboard>


    <Storyboard x:Key="AnimateMarginDagboekHide">
        <ThicknessAnimation
            Storyboard.TargetProperty="Margin"
            From="19,3,0,3"
            To="12,3,0,3"
            Duration="0:0:0.3" />
    </Storyboard>

    <Storyboard x:Key="AnimateMarginDagboekShow">
        <ThicknessAnimation
            Storyboard.TargetProperty="Margin"
            From="12,3,0,3"
            To="19,3,0,3"
            Duration="0:0:0.3" />
    </Storyboard>




    <Storyboard x:Key="AnimateIconShow">
        <DoubleAnimation
            Storyboard.TargetProperty="Width"
            From="30"
            To="20"
            Duration="0:0:0.3" />
        <DoubleAnimation
            Storyboard.TargetProperty="Height"
            From="30"
            To="20"
            Duration="0:0:0.3" />
    </Storyboard>
    <Storyboard x:Key="AnimateIconHide">
        <DoubleAnimation
            Storyboard.TargetProperty="Width"
            From="20"
            To="30"
            Duration="0:0:0.3" />
        <DoubleAnimation
            Storyboard.TargetProperty="Height"
            From="20"
            To="30"
            Duration="0:0:0.3" />
    </Storyboard>

    <Storyboard x:Key="AnimateMarginButtonHide">
        <ThicknessAnimation
            Storyboard.TargetProperty="Margin"
            From="6,0,0,0"
            To="20,0,0,0"
            Duration="0:0:0.3" />
    </Storyboard>

    <Storyboard x:Key="AnimateMarginButtonShow">
        <ThicknessAnimation
            Storyboard.TargetProperty="Margin"
            From="20,0,0,0"
            To="6,0,0,0"
            Duration="0:0:0.3" />
    </Storyboard>


    <Storyboard x:Key="AnimateIconHomeShow">
        <ThicknessAnimation
            Storyboard.TargetProperty="Margin"
            From="-150,0,0,0"
            To="0,0,0,0"
            Duration="0:0:0.3" />
    </Storyboard>

    <Storyboard x:Key="AnimateIconHomeHide">
        <ThicknessAnimation
            Storyboard.TargetProperty="Margin"
            From="0,0,0,0"
            To="-150,0,0,0"
            Duration="0:0:0.3" />
    </Storyboard>


    <Style x:Key="myHomeButtonMenu" TargetType="Path">

        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Data" Value="{StaticResource myPathHouse}" />
        <Setter Property="Fill" Value="White" />

        <Setter Property="VerticalAlignment" Value="Center" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMenuVisible}" Value="true">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource AnimateIconHomeShow}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource AnimateIconHomeHide}" />
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>




    <!--  Set the Heigt and With of the Path in the Menu  -->
    <Style x:Key="MenuIcon" TargetType="Path">
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Fill" Value="{StaticResource myMenuIcon}" />
        <Setter Property="Stretch" Value="Uniform" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMenuVisible}" Value="true">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource AnimateIconShow}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource AnimateIconHide}" />
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="MyExpanderIcon" TargetType="Path">
        <Setter Property="Height" Value="8" />
        <Setter Property="Width" Value="8" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Data" Value="{StaticResource myCollapsedIconPath}" />
        <Setter Property="Fill" Value="{StaticResource myWerkBalk}" />
        <Setter Property="Stretch" Value="Uniform" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMenuVisible}" Value="true">

                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource AnimateMarginShow}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource AnimateMarginHide}" />
                </DataTrigger.ExitActions>
            </DataTrigger>

        </Style.Triggers>
    </Style>




    <!--  Style For contentpresenter  -->
    <Style x:Key="MenuPresenter" TargetType="ContentPresenter">
        <Setter Property="Margin" Value="6,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Foreground="White" Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="myExpanderPerson" TargetType="Button">
        <Setter Property="Margin" Value="35,5,0,5" />
        <Setter Property="Foreground" Value="{StaticResource myWerkBalk}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="HeaderBorder" Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Path Data="{StaticResource myPathPeople}" Style="{StaticResource MenuIcon}" />
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Grid.Column="1"
                                Style="{StaticResource MenuPresenter}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="HeaderBorder" Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter TargetName="HeaderBorder" Property="Background" Value="LightBlue" />
                            <Setter TargetName="HeaderBorder" Property="CornerRadius" Value="1" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsMenuVisible}" Value="False">
                            <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="myExpanderDagboek" TargetType="Button">
        <Setter Property="Margin" Value="19,3,0,3" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource myWerkBalk}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="HeaderBorder" Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Path Data="{StaticResource myPathBook}" Style="{StaticResource MenuIcon}" />
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Grid.Column="1"
                                RecognizesAccessKey="True">
                                <ContentPresenter.Content>
                                    <TextBlock
                                        Margin="5,1,0,0"
                                        Foreground="{StaticResource MenuColorText}"
                                        Text="{TemplateBinding Content}" />
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="HeaderBorder" Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter TargetName="HeaderBorder" Property="Background" Value="LightBlue" />
                            <Setter TargetName="HeaderBorder" Property="CornerRadius" Value="1" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsMenuVisible}" Value="False">
                            <Setter TargetName="ContentPresenter" Property="Visibility" Value="Hidden" />
                            <Setter Property="Width" Value="30" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource AnimateMarginDagboekHide}" />
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource AnimateMarginDagboekShow}" />
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsMenuVisible}" Value="true">
                            <Setter TargetName="ContentPresenter" Property="Visibility" Value="Visible" />
                            <Setter Property="Width" Value="200" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="myExpanderBudget" TargetType="Button">
        <Setter Property="Margin" Value="35,5,0,5" />
        <Setter Property="Foreground" Value="{StaticResource myWerkBalk}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="HeaderBorder" Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Path Data="{StaticResource myPathEuro}" Style="{StaticResource MenuIcon}" />
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Grid.Column="1"
                                Style="{StaticResource MenuPresenter}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="HeaderBorder" Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter TargetName="HeaderBorder" Property="Background" Value="LightBlue" />
                            <Setter TargetName="HeaderBorder" Property="CornerRadius" Value="1" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsMenuVisible}" Value="False">
                            <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="myExpanderTodo" TargetType="Button">
        <Setter Property="Margin" Value="35,5,0,5" />
        <Setter Property="Foreground" Value="{StaticResource myWerkBalk}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="HeaderBorder" Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Path Data="{StaticResource myPathToDo}" Style="{StaticResource MenuIcon}" />
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Grid.Column="1"
                                Style="{StaticResource MenuPresenter}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="HeaderBorder" Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter TargetName="HeaderBorder" Property="Background" Value="LightBlue" />
                            <Setter TargetName="HeaderBorder" Property="CornerRadius" Value="1" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsMenuVisible}" Value="False">
                            <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="myExpanderSecurity" TargetType="Button">
        <Setter Property="Margin" Value="35,5,0,5" />
        <Setter Property="Foreground" Value="{StaticResource myWerkBalk}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="HeaderBorder" Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Path Data="{StaticResource myPathKey}" Style="{StaticResource MenuIcon}" />
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Grid.Column="1"
                                Style="{StaticResource MenuPresenter}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="HeaderBorder" Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter TargetName="HeaderBorder" Property="Background" Value="LightBlue" />
                            <Setter TargetName="HeaderBorder" Property="CornerRadius" Value="1" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsMenuVisible}" Value="False">
                            <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="myExpanderStickyNote" TargetType="Button">
        <Setter Property="Margin" Value="35,5,0,5" />
        <Setter Property="Foreground" Value="{StaticResource myWerkBalk}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="HeaderBorder" Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Path Data="{StaticResource myPathStickyNote}" Style="{StaticResource MenuIcon}" />
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Grid.Column="1"
                                Style="{StaticResource MenuPresenter}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="HeaderBorder" Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter TargetName="HeaderBorder" Property="Background" Value="LightBlue" />
                            <Setter TargetName="HeaderBorder" Property="CornerRadius" Value="1" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsMenuVisible}" Value="False">
                            <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Stijl voor de knop  -->
    <Style x:Key="myMenuTandwiel" TargetType="Button">
        <Setter Property="Margin" Value="35,5,0,5" />
        <Setter Property="Foreground" Value="{StaticResource myWerkBalk}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="HeaderBorder" Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <!--  Icon  -->
                            <Path Data="{StaticResource myPathSetting}" Style="{StaticResource MenuIcon}" />
                            <!--  ContentPresenter met een ingesloten TextBlock  -->
                            <ContentPresenter Grid.Column="1" RecognizesAccessKey="True">
                                <ContentPresenter.Content>
                                    <TextBlock
                                        Margin="5,0,0,0"
                                        Foreground="{StaticResource MenuColorText}"
                                        Text="{TemplateBinding Content}" />
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <!--  Mouse-over effecten  -->
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="HeaderBorder" Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter TargetName="HeaderBorder" Property="Background" Value="LightBlue" />
                            <Setter TargetName="HeaderBorder" Property="CornerRadius" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="myMenuPersoon" TargetType="Button">
        <Setter Property="Margin" Value="35,5,0,5" />
        <Setter Property="Foreground" Value="{StaticResource myWerkBalk}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="HeaderBorder" Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <!--  Icon  -->
                            <Path Data="{StaticResource myPathPerson}" Style="{StaticResource MenuIcon}" />
                            <!--  ContentPresenter met een ingesloten TextBlock  -->
                            <ContentPresenter Grid.Column="1" RecognizesAccessKey="True">
                                <ContentPresenter.Content>
                                    <TextBlock
                                        Margin="5,2,0,0"
                                        Foreground="{StaticResource MenuColorText}"
                                        Text="{TemplateBinding Content}" />
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <!--  Mouse-over effecten  -->
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="HeaderBorder" Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter TargetName="HeaderBorder" Property="Background" Value="LightBlue" />
                            <Setter TargetName="HeaderBorder" Property="CornerRadius" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="myMenuStickyNoteColor" TargetType="Button">
        <Setter Property="Margin" Value="35,5,0,5" />
        <Setter Property="Foreground" Value="{StaticResource myWerkBalk}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="HeaderBorder" Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <!--  Icon  -->
                            <Path Data="{StaticResource myPathSetting}" Style="{StaticResource MenuIcon}" />
                            <!--  ContentPresenter met een ingesloten TextBlock  -->
                            <ContentPresenter Grid.Column="1" RecognizesAccessKey="True">
                                <ContentPresenter.Content>
                                    <TextBlock
                                        Margin="5,0,0,0"
                                        Foreground="{StaticResource MenuColorText}"
                                        Text="{TemplateBinding Content}" />
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <!--  Mouse-over effecten  -->
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="HeaderBorder" Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter TargetName="HeaderBorder" Property="Background" Value="LightBlue" />
                            <Setter TargetName="HeaderBorder" Property="CornerRadius" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--  Knop HomeManger  -->
    <Style x:Key="myHamburgerMenu" TargetType="ToggleButton">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Background" Value="{StaticResource myTitleBar}" />
        <Setter Property="Margin" Value="10,0,0,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="{TemplateBinding Background}" Cursor="Hand">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Path
                            Grid.Column="0"
                            Width="32"
                            Height="24"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{StaticResource myPathMenu}"
                            Fill="{StaticResource MenuColorText}"
                            IsHitTestVisible="False"
                            Stretch="Uniform" />
                        <TextBlock
                            Grid.Column="1"
                            Margin="15,0,0,0"
                            VerticalAlignment="Center"
                            FontSize="16"
                            Foreground="{StaticResource MenuColorText}"
                            IsHitTestVisible="False"
                            Text="Home Manager" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="myHamburgerPersonen" TargetType="Expander">
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border
                        Background="Transparent"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <StackPanel
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Orientation="Horizontal">
                                <ToggleButton
                                    x:Name="ExpanderToggleButton"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <StackPanel Orientation="Horizontal">
                                                <Border Name="ExpanderBorder" Background="Transparent">
                                                    <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                                        <Path x:Name="ExpanderIcon" Style="{StaticResource MyExpanderIcon}" />
                                                    </StackPanel>
                                                </Border>
                                            </StackPanel>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="ExpanderIcon" Property="Data" Value="{StaticResource myExpandedIconPath}" />
                                                    <Setter TargetName="ExpanderIcon" Property="Fill" Value="{StaticResource myMenuIcon}" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="ExpanderBorder" Property="Background" Value="LightBlue" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <Button
                                    Margin="10,0,0,0"
                                    Command="{Binding NavCommand}"
                                    CommandParameter="clsPersonenViewModel"
                                    Style="{StaticResource myExpanderPerson}">
                                    <Button.Content>
                                        <TextBlock Foreground="{StaticResource MenuColorText}" Text="Personen" />
                                    </Button.Content>
                                </Button>
                            </StackPanel>


                            <ContentPresenter
                                x:Name="ExpanderContent"
                                Grid.Row="1"
                                Grid.ColumnSpan="2"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="myHamburgerBudget" TargetType="Expander">
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border
                        Background="Transparent"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <StackPanel
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Orientation="Horizontal">
                                <ToggleButton
                                    x:Name="ExpanderToggleButton"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <StackPanel Orientation="Horizontal">
                                                <Border Name="ExpanderBorder" Background="Transparent">
                                                    <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                                        <Path x:Name="ExpanderIcon" Style="{StaticResource MyExpanderIcon}" />
                                                    </StackPanel>
                                                </Border>
                                            </StackPanel>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="ExpanderIcon" Property="Data" Value="{StaticResource myExpandedIconPath}" />
                                                    <Setter TargetName="ExpanderIcon" Property="Fill" Value="{StaticResource myMenuIcon}" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="ExpanderBorder" Property="Background" Value="LightBlue" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <Button
                                    Margin="10,0,0,0"
                                    Command="{Binding NavCommand}"
                                    CommandParameter="clsOverzichtViewModel"
                                    Style="{StaticResource myExpanderBudget}">
                                    <Button.Content>
                                        <TextBlock Foreground="{StaticResource MenuColorText}" Text="Budget" />
                                    </Button.Content>
                                </Button>
                            </StackPanel>

                            <ContentPresenter
                                x:Name="ExpanderContent"
                                Grid.Row="1"
                                Grid.ColumnSpan="2"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="myHamburgerTodo" TargetType="Expander">
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border
                        Background="Transparent"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <StackPanel
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Orientation="Horizontal">
                                <ToggleButton
                                    x:Name="ExpanderToggleButton"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <StackPanel Orientation="Horizontal">
                                                <Border Name="ExpanderBorder" Background="Transparent">
                                                    <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                                        <Path x:Name="ExpanderIcon" Style="{StaticResource MyExpanderIcon}" />
                                                    </StackPanel>
                                                </Border>
                                            </StackPanel>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="ExpanderIcon" Property="Data" Value="{StaticResource myExpandedIconPath}" />
                                                    <Setter TargetName="ExpanderIcon" Property="Fill" Value="{StaticResource myMenuIcon}" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="ExpanderBorder" Property="Background" Value="LightBlue" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <!--  Button met wit gemaakte tekst  -->
                                <Button
                                    Margin="10,0,0,0"
                                    Command="{Binding NavCommand}"
                                    CommandParameter="clsCategorieViewModel"
                                    Style="{StaticResource myExpanderTodo}">
                                    <Button.Content>
                                        <TextBlock Foreground="{StaticResource MenuColorText}" Text="ToDo" />
                                    </Button.Content>
                                </Button>
                            </StackPanel>

                            <ContentPresenter
                                x:Name="ExpanderContent"
                                Grid.Row="1"
                                Grid.ColumnSpan="2"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="myHamburgerSecurity" TargetType="Expander">
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border
                        Background="Transparent"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <StackPanel
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Orientation="Horizontal">
                                <ToggleButton
                                    x:Name="ExpanderToggleButton"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <StackPanel Orientation="Horizontal">
                                                <Border Name="ExpanderBorder" Background="Transparent">
                                                    <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                                        <Path x:Name="ExpanderIcon" Style="{StaticResource MyExpanderIcon}" />
                                                    </StackPanel>
                                                </Border>
                                            </StackPanel>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="ExpanderIcon" Property="Data" Value="{StaticResource myExpandedIconPath}" />
                                                    <Setter TargetName="ExpanderIcon" Property="Fill" Value="{StaticResource myMenuIcon}" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="ExpanderBorder" Property="Background" Value="LightBlue" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <Button
                                    Margin="10,0,0,0"
                                    Command="{Binding NavCommand}"
                                    CommandParameter="clsCredentialManagementViewModel"
                                    Style="{StaticResource myExpanderSecurity}">
                                    <Button.Content>
                                        <TextBlock Foreground="{StaticResource MenuColorText}" Text="Security" />
                                    </Button.Content>
                                </Button>
                            </StackPanel>

                            <ContentPresenter
                                x:Name="ExpanderContent"
                                Grid.Row="1"
                                Grid.ColumnSpan="2"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="myHamburgerStickyNotes" TargetType="Expander">
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border
                        Background="Transparent"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <StackPanel
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Orientation="Horizontal">
                                <ToggleButton
                                    x:Name="ExpanderToggleButton"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <StackPanel Orientation="Horizontal">
                                                <Border Name="ExpanderBorder" Background="Transparent">
                                                    <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                                        <Path x:Name="ExpanderIcon" Style="{StaticResource MyExpanderIcon}" />
                                                    </StackPanel>
                                                </Border>
                                            </StackPanel>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="ExpanderIcon" Property="Data" Value="{StaticResource myExpandedIconPath}" />
                                                    <Setter TargetName="ExpanderIcon" Property="Fill" Value="{StaticResource myMenuIcon}" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="ExpanderBorder" Property="Background" Value="LightBlue" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <Button
                                    Margin="10,0,0,0"
                                    Command="{Binding NavCommand}"
                                    CommandParameter="clsPersoonViewModel"
                                    Style="{StaticResource myExpanderStickyNote}">
                                    <Button.Content>
                                        <TextBlock Foreground="{StaticResource MenuColorText}" Text="StickyNotes" />
                                    </Button.Content>
                                </Button>
                            </StackPanel>

                            <ContentPresenter
                                x:Name="ExpanderContent"
                                Grid.Row="1"
                                Grid.ColumnSpan="2"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Storyboard x:Key="AnimatieMarginPowerButtonShow">
        <ThicknessAnimation
            Storyboard.TargetProperty="Margin"
            From="-140,0,0,0"
            To="123,0,0,0"
            Duration="0:0:0.3" />
    </Storyboard>
    <Storyboard x:Key="AnimatieMarginPowerButtonHide">
        <ThicknessAnimation
            Storyboard.TargetProperty="Margin"
            From="123,0,0,0"
            To="-140,0,0,0"
            Duration="0:0:0.3" />
    </Storyboard>


    <Style x:Key="MenuPowerIcon" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="HeaderBorder" Background="Transparent">                       
                            <Path
                            Width="10"
                            Height="10"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{StaticResource myPathPower}"
                            Fill="{StaticResource MenuColorText}"
                            IsHitTestVisible="False"
                            Stretch="Uniform" />      
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="HeaderBorder" Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />                        
                        </Trigger>   
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

     
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMenuVisible}" Value="true">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource AnimatieMarginPowerButtonShow}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource AnimatieMarginPowerButtonHide}" />
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>



</ResourceDictionary>