<Window
    x:Class="HomeManager.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:V="clr-namespace:HomeManager.View"
    xmlns:VM="clr-namespace:HomeManager.ViewModel"
    xmlns:VMagenda="clr-namespace:HomeManager.Agenda.ViewModel;assembly=HomeManager.Agenda"
    xmlns:Vagenda="clr-namespace:HomeManager.Agenda.View;assembly=HomeManager.Agenda"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:HomeManager"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="MainWIN"
    Title="MainWindow"
    Width="1000"
    Height="900"
    Background="{StaticResource myTitleBar}"
    mc:Ignorable="d">
    <Window.DataContext>
        <VM:clsHomeVM />
    </Window.DataContext>


    <Window.Resources>
        <DataTemplate DataType="{x:Type VM:clsPersoonViewModel}">
            <V:ucPersoon />
        </DataTemplate>
        <DataTemplate DataType="{x:Type VM:clsFunctieViewModel}">
            <V:ucFunctie />
        </DataTemplate>
        <DataTemplate DataType="{x:Type VM:clsEmailTypeViewModel}">
            <V:ucEmailType />
        </DataTemplate>
        <DataTemplate DataType="{x:Type VM:clsTelefoonTypeViewModel}">
            <V:ucTelefoonType />
        </DataTemplate>
        <DataTemplate DataType="{x:Type VM:clsLandViewModel}">
            <V:ucLand />
        </DataTemplate>
        <DataTemplate DataType="{x:Type VM:clsProvincieViewModel}">
            <V:ucProvincie />
        </DataTemplate>
        <DataTemplate DataType="{x:Type VM:clsGemeenteViewModel}">
            <V:ucGemeente />
        </DataTemplate>
        <DataTemplate DataType="{x:Type VM:clsEmailAdressenViewModel}">
            <V:ucEmailAdressen />
        </DataTemplate>
        <DataTemplate DataType="{x:Type VM:clsAdressenViewModel}">
            <V:ucAdressen />
        </DataTemplate>
        <DataTemplate DataType="{x:Type VM:clsTelefoonNummersViewModel}">
            <V:ucTelefoonNummers />
        </DataTemplate>
        <DataTemplate DataType="{x:Type VM:clsNotitiesViewModel}">
            <V:ucNotities />
        </DataTemplate>

        <DataTemplate DataType="{x:Type VM:clsRechtenViewModel}">
            <V:ucRoles />
        </DataTemplate>
        <DataTemplate DataType="{x:Type VM:clsCredentialGroupViewModel}">
            <V:ucCredentialGroup />
        </DataTemplate>
        <DataTemplate DataType="{x:Type VM:clsCredentialManagementViewModel}">
            <V:ucCredentialManagement />
        </DataTemplate>
        <DataTemplate DataType="{x:Type VM:clsAccountViewModel}">
            <V:ucAccount />
        </DataTemplate>
        <DataTemplate DataType="{x:Type VM:clsPersonenViewModel}">
            <V:ucPersonen />
        </DataTemplate>
   

    </Window.Resources>


    <Grid x:Name="grdMain">
        <Grid.RowDefinitions>
            <RowDefinition Height="60" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>



        <V:ucTitlePerson
            Grid.ColumnSpan="2"
            Margin="0,0,10,0"
            HorizontalAlignment="Right"
            VerticalAlignment="Center" />

        <!--  test  -->
        <Image
            Grid.Row="1"
            Grid.ColumnSpan="2"
            Source="/Images/background.jpg"
            Stretch="Fill" />





        <!--#region  HamburgerMenu-->

        <Border
            x:Name="HamburgerMenu"
            Grid.Row="1"
            Grid.Column="0"
            Width="200"
            HorizontalAlignment="Left"
            Background="#99024f87">
            <Border.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsMenuVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ShowMenu}" />
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HideMenu}" />
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <Grid Width="200">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="20" />
                </Grid.RowDefinitions>

                <Path Style="{StaticResource myHomeButtonMenu}" />



                <StackPanel
                    Grid.Row="1"
                    Width="200"
                    HorizontalAlignment="Left"
                    Orientation="Vertical">

                    <Button
                        Command="{Binding NavCommand}"
                        CommandParameter="clsAgendaViewModel"
                        Content="Agenda"
                        Style="{StaticResource myExpanderCalendar}" />

                    <Expander IsExpanded="{Binding IsPersonenExpanderMenu, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource myHamburgerPersonen}">
                        <StackPanel x:Name="stckPerson">
                            <Button
                                Command="{Binding NavCommand}"
                                CommandParameter="clsPersonenViewModel"
                                Content="Personen"
                                Style="{StaticResource myMenuTandwiel}" />
                            <Button
                                Command="{Binding NavCommand}"
                                CommandParameter="clsPersoonViewModel"
                                Content="Persoon"
                                Style="{StaticResource myExpanderPerson}" />
                            <Button
                                Command="{Binding NavCommand}"
                                CommandParameter="clsEmailTypeViewModel"
                                Content="EmailType"
                                Style="{StaticResource myMenuTandwiel}" />
                            <Button
                                Command="{Binding NavCommand}"
                                CommandParameter="clsTelefoonTypeViewModel"
                                Content="TelefoonType"
                                Style="{StaticResource myMenuTandwiel}" />
                            <Button
                                Command="{Binding NavCommand}"
                                CommandParameter="clsLandViewModel"
                                Content="Land"
                                Style="{StaticResource myMenuTandwiel}" />
                            <Button
                                Command="{Binding NavCommand}"
                                CommandParameter="clsProvincieViewModel"
                                Content="Provincie"
                                Style="{StaticResource myMenuTandwiel}" />
                            <Button
                                Command="{Binding NavCommand}"
                                CommandParameter="clsGemeenteViewModel"
                                Content="Gemeente"
                                Style="{StaticResource myMenuTandwiel}" />
                            <Button
                                Command="{Binding NavCommand}"
                                CommandParameter="clsFunctieViewModel"
                                Content="Functies"
                                Style="{StaticResource myExpanderPerson}" />
                            <!--<Button
                                Command="{Binding NavCommand}"
                                CommandParameter="clsEmailAdressenViewModel"
                                Content="EmailAdressen"
                                Style="{StaticResource myExpanderPerson}" />
                            <Button
                                Command="{Binding NavCommand}"
                                CommandParameter="clsAdressenViewModel"
                                Content="Adressen"
                                Style="{StaticResource myExpanderPerson}" />
                            <Button
                                Command="{Binding NavCommand}"
                                CommandParameter="clsTelefoonNummersViewModel"
                                Content="Telefoonnummers"
                                Style="{StaticResource myExpanderPerson}" />-->
                            <!--<Button
                                Command="{Binding NavCommand}"
                                CommandParameter="clsNotitiesViewModel"
                                Content="Notities"
                                Style="{StaticResource myExpanderPerson}" />-->
                        </StackPanel>
                    </Expander>

                    <Button Content="Dagboek" Style="{StaticResource myExpanderDagboek}" />

                    <Expander IsExpanded="{Binding IsBudgetExpanderMenu, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource myHamburgerBudget}">
                        <StackPanel x:Name="stckBudget">
                            <Button Content="Domiciliëring" Style="{StaticResource myMenuTandwiel}" />
                            <Button Content="Begunstigden" Style="{StaticResource myMenuTandwiel}" />
                            <Button Content="Frequentie" Style="{StaticResource myMenuTandwiel}" />
                            <Button
                                Command="{Binding NavCommand}"
                                CommandParameter="clsCategorieViewModel"
                                Content="Budget Categorie"
                                Style="{StaticResource myMenuTandwiel}" />
                        </StackPanel>
                    </Expander>

                    <Expander IsExpanded="{Binding IsTodoExpanderMenu, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource myHamburgerTodo}">

                        <StackPanel x:Name="stckTodo">
                            <Button Content="Todo Collectie" Style="{StaticResource myMenuTandwiel}" />
                            <Button Content="Todo Categoriën" Style="{StaticResource myMenuTandwiel}" />
                            <Button Content="Todo Kleuren" Style="{StaticResource myMenuTandwiel}" />
                        </StackPanel>

                    </Expander>

                    <Expander IsExpanded="{Binding IsSecurityExpanderMenu, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource myHamburgerSecurity}">
                        <StackPanel x:Name="stckSecurity">
                            <Button
                                Command="{Binding NavCommand}"
                                CommandParameter="clsAccountViewModel"
                                Content="Account beheren"
                                Style="{StaticResource myMenuTandwiel}" />
                            <Button
                                Command="{Binding NavCommand}"
                                CommandParameter="clsCredentialManagementViewModel"
                                Content="Wachtwoorden"
                                Style="{StaticResource myMenuTandwiel}" />
                            <Button
                                Command="{Binding NavCommand}"
                                CommandParameter="clsCredentialGroupViewModel"
                                Content="Wachtwoordengroep"
                                Style="{StaticResource myMenuTandwiel}" />
                            <Button
                                Command="{Binding NavCommand}"
                                CommandParameter="clsRechtenViewModel"
                                Content="Rollen"
                                Style="{StaticResource myMenuTandwiel}" />
                        </StackPanel>
                    </Expander>

                    <Expander IsExpanded="{Binding IsStickyNotesExpanderMenu, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource myHamburgerStickyNotes}">
                        <StackPanel x:Name="stckStickynotes">
                            <Button Content="Sticky notes colors" Style="{StaticResource myExpanderStickyNoteColors}" />
                        </StackPanel>

                    </Expander>

                </StackPanel>

                <Path
                    Grid.Row="2"
                    Width="10"
                    Height="10"
                    Margin="0,0,5,0"
                    HorizontalAlignment="Right"
                    Data="{StaticResource myPathPower}"
                    Fill="White"
                    Stretch="Fill" />
            </Grid>
        </Border>

        <ToggleButton
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Command="{Binding cmdMenu}"
            IsChecked="True"
            Style="{StaticResource myHamburgerMenu}" />

        <!--#endregion-->






        <Canvas
            Grid.Row="1"
            Grid.Column="1"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            DataContext="{Binding Source={StaticResource VML}, Path=NoteViewModel}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SizeChanged">
                    <i:InvokeCommandAction Command="{Binding CanvasSizeChangedCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Canvas}}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <TextBlock Text="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Canvas}, Mode=OneWay}" />


            <ContentControl
                Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Canvas}, Mode=OneWay}"
                Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Canvas}, Mode=OneWay}"
                Content="{Binding CurrentViewModel}"
                DataContext="{Binding ElementName=MainWIN, Path=DataContext}" />


            <ItemsControl DataContext="{Binding Source={StaticResource VML}, Path=NoteViewModel}" ItemsSource="{Binding MijnCollectie}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Canvas.Left" Value="{Binding CanvasLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter Property="Canvas.Top" Value="{Binding CanvasTop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter Property="Panel.ZIndex" Value="{Binding ZIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>

                        <StackPanel Margin="0,-5,0,0" Orientation="Vertical">

                            <Border
                                Width="{Binding Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Height="{Binding Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Margin="2,0,0,0"
                                Panel.ZIndex="2"
                                Background="{Binding NoteColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                BorderBrush="{Binding NoteBorderColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                BorderThickness="1"
                                CornerRadius="1"
                                Cursor="Hand">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding DataContext.MouseLeftUpNoteItem, RelativeSource={RelativeSource AncestorType=Canvas}}" CommandParameter="{Binding}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding DataContext.MouseLeftDownNoteItem, RelativeSource={RelativeSource AncestorType=Canvas}}" CommandParameter="{Binding}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseMove">
                                        <i:InvokeCommandAction Command="{Binding DataContext.MouseMoveNoteItem, RelativeSource={RelativeSource AncestorType=Canvas}}" CommandParameter="{Binding}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseEnter">
                                        <i:InvokeCommandAction Command="{Binding DataContext.MouseEnterNoteItem, RelativeSource={RelativeSource AncestorType=Canvas}}" CommandParameter="{Binding}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseLeave">
                                        <i:InvokeCommandAction Command="{Binding DataContext.MouseLeaveNoteItem, RelativeSource={RelativeSource AncestorType=Canvas}}" CommandParameter="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>



                                <StackPanel>
                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        FontSize="12"
                                        FontWeight="Bold"
                                        Foreground="Black"
                                        Text="{Binding NoteTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBlock
                                        Margin="3,2,3,3"
                                        FontSize="10"
                                        Text="{Binding NoteText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </StackPanel>
                            </Border>

                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>



        </Canvas>


    </Grid>
</Window>